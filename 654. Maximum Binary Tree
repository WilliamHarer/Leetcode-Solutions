/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        LinkedList<TreeNode> myStack= new LinkedList<>();
        if(nums.length==0){
            return  null;
        }
        for(int i=0; i< nums.length;i++){
           TreeNode tempCurr=new TreeNode(nums[i]);
               while(!myStack.isEmpty()&&myStack.peek().val<nums[i]){
                   tempCurr.left=myStack.pop();
               }
               if(!myStack.isEmpty()){
                   myStack.peek().right=tempCurr;
               }
               myStack.push(tempCurr);
           }
        return(myStack.removeLast());
        }
}
